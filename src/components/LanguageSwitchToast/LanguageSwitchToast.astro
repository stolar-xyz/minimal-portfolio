---
import CrossIcon from '@/assets/icons/cross.svg';
---

<div id="toast-container" class="hidden"></div>
<template id="toast-template">
  <div
    class="bg-1 border-color-1 fixed bottom-0 z-10 w-full rounded-xs border-t px-6 py-9 sm:right-10 sm:bottom-10 sm:w-[302px] sm:border sm:p-4 xl:w-[337px] xl:rounded-sm xl:p-5 2xl:w-[425px] 2xl:p-6"
  >
    <div
      class="text-md relative grid justify-items-start gap-y-3 py-2 xl:text-base 2xl:gap-y-3.5 2xl:text-lg"
    >
      {/* eslint-disable-next-line */}
      <a class="underline underline-offset-2"></a>
      <p class="text-2"></p>
      <button type="button" class="absolute right-0">
        <CrossIcon class="h-4 w-4 2xl:h-6 2xl:w-6" />
      </button>
    </div>
  </div>
</template>

<script>
  import { prefetch } from 'astro:prefetch';
  import { getLocalePath, getTranslation, isSupportedLocale } from '@/i18n';
  import {
    dismissLanguageSuggestion,
    getUserBrowserLanguage,
    isDismissed,
  } from './utils';

  const currentLanguage = document.documentElement.lang;
  const userBrowserLanguage = getUserBrowserLanguage();
  const shouldShowToast =
    !isDismissed() &&
    currentLanguage !== userBrowserLanguage &&
    isSupportedLocale(userBrowserLanguage);

  if (shouldShowToast) {
    const container = document.getElementById('toast-container');
    const template = document.getElementById(
      'toast-template',
    ) as HTMLTemplateElement | null;

    if (container && template) {
      container.appendChild(template.content.cloneNode(true));

      const toastWrapper = container.firstElementChild;
      const link = toastWrapper?.querySelector('a');
      const description = toastWrapper?.querySelector('p');
      const closeButton = toastWrapper?.querySelector('button');

      if (toastWrapper && link && description && closeButton) {
        const { toast } = await getTranslation(userBrowserLanguage, true);
        const localePath = getLocalePath(userBrowserLanguage);

        link.href = localePath;
        link.textContent = toast.changeLanguage;
        link.addEventListener('mouseover', () => prefetch(localePath));

        description.textContent = toast.availableInYourLanguage;

        closeButton.ariaLabel = toast.close;
        closeButton.addEventListener('click', () => {
          dismissLanguageSuggestion();
          toastWrapper.classList.add('animate-slide-out-down');

          setTimeout(() => {
            container.remove();
          }, 600);
        });

        setTimeout(() => {
          container.classList.remove('hidden');
          toastWrapper.classList.add('animate-slide-in-up');
        }, 3000);
      }
    }
  }
</script>
