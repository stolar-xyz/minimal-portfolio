---
export type Props = {
  direction: 'up' | 'down';
  animatedColumns: number;
  columns: number;
  className?: string;
};

const { direction, animatedColumns, columns, className } = Astro.props;

const DELAY = 0.25;

const getInitialGridColumn = () =>
  Math.floor((columns - animatedColumns) / 2) + 1;

const getAnimationDelay = (index: number) => {
  const order = Math.abs(index - animatedColumns / 2);
  const animationDelay = Math.round(order * DELAY * 1000);

  return `${animationDelay}ms`;
};
---

{
  Array.from({ length: animatedColumns }).map((_, i) => (
    <div
      class:list={[
        className,
        'animated-columns before:animation-delay-(--delay-before) after:animation-delay-(--delay-after)',
        {
          'origin-top': direction === 'down',
          'origin-bottom': direction === 'up',
        },
      ]}
      style={{
        gridColumn: i === 0 && getInitialGridColumn(),
        '--delay-before': getAnimationDelay(i),
        '--delay-after': getAnimationDelay(i + 1),
      }}
    />
  ))
}
