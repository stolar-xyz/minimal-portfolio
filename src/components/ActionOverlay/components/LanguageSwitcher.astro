---
import GlobeIcon from '@/assets/icons/globe.svg';
import { getLocalesNavigation, getTranslation } from '@/i18n';

const { switchLanguage } = await getTranslation(Astro.currentLocale);
---

<div class="relative grid" id="language-switcher">
  <button
    id="language-toggle"
    type="button"
    class="group peer"
    aria-label={switchLanguage}
    aria-expanded="false"
    aria-controls="language-menu"
  >
    <GlobeIcon
      class="group-aria-expanded:stroke-[1.5] group-aria-expanded:active:stroke-1"
    />
  </button>
  <ul
    id="language-menu"
    aria-hidden="true"
    class="invisible absolute bottom-10 grid origin-bottom translate-y-3 scale-y-0 gap-y-3 justify-self-center text-xs uppercase opacity-0 transition-[translate,opacity,scale,visibility] ease-in-out peer-aria-expanded:visible peer-aria-expanded:translate-y-0 peer-aria-expanded:scale-y-100 peer-aria-expanded:opacity-100 sm:text-sm xl:bottom-12 xl:gap-y-4 xl:text-base 2xl:bottom-14 2xl:text-lg"
  >
    {
      getLocalesNavigation().map(({ locale, path }) => {
        const isCurrent = Astro.currentLocale === locale;

        return (
          <li class="text-states">
            <a
              data-astro-prefetch
              href={path}
              aria-current={isCurrent}
              class:list={[
                'block',
                {
                  'text-1': isCurrent,
                },
              ]}
            >
              {locale}
            </a>
          </li>
        );
      })
    }
  </ul>
</div>

<script>
  const languageSwitcher = document.getElementById('language-switcher');
  const toggleButton = document.getElementById('language-toggle');
  const languageMenu = document.getElementById('language-menu');

  let isOpen = false;

  const setMenuState = () => {
    toggleButton?.setAttribute('aria-expanded', String(isOpen));
    languageMenu?.setAttribute('aria-hidden', String(!isOpen));
  };

  const onToggle = () => {
    isOpen = !isOpen;
    setMenuState();
  };

  toggleButton?.addEventListener('click', onToggle);
  document.addEventListener('click', ({ target }) => {
    if (
      isOpen &&
      target instanceof Node &&
      !languageSwitcher?.contains(target)
    ) {
      onToggle();
    }
  });

  document.addEventListener('keydown', ({ key }) => {
    if (key === 'Escape' && isOpen) {
      onToggle();
    }
  });
</script>
